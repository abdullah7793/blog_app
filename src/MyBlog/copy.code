Modal COde 

import React from "react";
import UploadWidget from "./UploadWidget"; // Import UploadWidget component

const Modal = ({ isOpen, onClose, onSubmit, formData, setFormData }) => {
  if (!isOpen) return null;

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData((prev) => ({ ...prev, [name]: value }));
  };

  return (
    <div className="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50">
      <div className="bg-white p-6 rounded-lg shadow-lg w-1/3 max-h-[80vh] overflow-y-auto">
        <h2 className="text-xl font-bold mb-4">Add New Post</h2>
        <form onSubmit={onSubmit}>
          <div className="mb-4">
            <label className="block mb-1">Name:</label>
            <input
              type="text"
              name="name"
              value={formData.name}
              onChange={handleChange}
              required
              className="w-full px-3 py-2 border border-gray-300 rounded"
            />
          </div>
          <div className="mb-4">
            <label className="block mb-1">Country:</label>
            <input
              type="text"
              name="country"
              value={formData.country}
              onChange={handleChange}
              required
              className="w-full px-3 py-2 border border-gray-300 rounded"
            />
          </div>
          <div className="mb-4">
            <label className="block mb-1">Age:</label>
            <input
              type="number"
              name="age"
              value={formData.age}
              onChange={handleChange}
              required
              className="w-full px-3 py-2 border border-gray-300 rounded"
            />
          </div>
          <div className="mb-4">
            <label className="block mb-1">Description:</label>
            <textarea
              name="description"
              rows="3"
              value={formData.description}
              onChange={handleChange}
              required
              className="w-full px-3 py-2 border border-gray-300 rounded"
            ></textarea>
          </div>

          <UploadWidget formData={formData} setFormData={setFormData} />

          <div className="flex justify-end">
            <button
              type="button"
              onClick={onClose}
              className="bg-gray-300 px-4 py-2 rounded mr-2"
            >
              Cancel
            </button>
            <button
              type="submit"
              className="bg-blue-500 text-white px-4 py-2 rounded"
            >
              Submit
            </button>
          </div>
        </form>
      </div>
    </div>
  );
};
export default Modal;




Upload Widget code 


import React, { useEffect, useState } from "react";

const UploadWidget = ({ setFormData, formData }) => {
  const [widget, setWidget] = useState(null);

  useEffect(() => {
    const script = document.createElement("script");
    script.src = "https://upload-widget.cloudinary.com/latest/global/all.js";
    script.type = "text/javascript";

    script.onload = () => {
      const myWidget = cloudinary.createUploadWidget(
        {
          cloudName: import.meta.env.VITE_REACT_APP_CLOUD_NAME,
          uploadPreset: import.meta.env.VITE_REACT_APP_UPLOAD_PROCESS,
        },
        (error, result) => {
          if (!error && result && result.event === "success") {
            setFormData((prev) => ({
              ...prev,
              imageUrl: result.info.secure_url,
            }));
            console.log(
              "Done! Here is the image info: ",
              result.info.secure_url
            );
          }
        }
      );

      setWidget(myWidget);

      document
        .getElementById("upload_widget")
        .addEventListener("click", function (e) {
          e.preventDefault();
          myWidget.open();
        });
    };

    document.body.appendChild(script);

    return () => {
      document.body.removeChild(script);
    };
  }, [setFormData]);

  return (
    <div>
      {!formData?.imageUrl ? (
        <button id="upload_widget" className="cloudinary-button">
          Upload files
        </button>
      ) : (
        <div className="mb-4">
          <label className="block mb-1">Preview:</label>
          <img
            src={formData.imageUrl || "https://via.placeholder.com/150"}
            alt="Uploaded Preview"
            className="w-full h-64 object-cover rounded"
          />
        </div>
      )}
    </div>
  );
};

export default UploadWidget;
